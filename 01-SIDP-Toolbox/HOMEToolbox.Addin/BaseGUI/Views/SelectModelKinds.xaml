<Window x:Class="HOMEToolbox.BaseGUI.SelectModelKinds"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HOMEToolbox.BaseGUI"
        xmlns:vm="clr-namespace:HOMEToolbox.BaseGUI.ViewModel"
        mc:Ignorable="d"
        Title="Select Model Kinds" Height="280" Width="800"
        Background="#808080"
        ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <vm:SelectModelKindsViewModel/>
    </Window.DataContext>
    <Window.Resources>
        
        <Color x:Key="DarkestGrayColor">#6a6a6a</Color>
        <Color x:Key="DarkerGrayColor">#808080</Color>
        <Color x:Key="DarkGrayColor">#ababab</Color>
        <Color x:Key="MidGrayColor">#d4d4d4</Color>
        <Color x:Key="LightGrayColor">#f0f0f0</Color>

        <SolidColorBrush x:Key="DarkestGrayBrush" Color="{StaticResource DarkestGrayColor}" />
        <SolidColorBrush x:Key="DarkerGrayBrush" Color="{StaticResource DarkerGrayColor}" />
        <SolidColorBrush x:Key="DarkGrayBrush" Color="{StaticResource DarkGrayColor}" />
        <SolidColorBrush x:Key="MidGrayColorBrush" Color="{StaticResource MidGrayColor}" />
        <SolidColorBrush x:Key="LightGrayBrush" Color="{StaticResource LightGrayColor}" />

        <Style x:Key="WindowStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{StaticResource LightGrayBrush}"/>
        </Style>

        <Style x:Key="listItemGray" TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource MidGrayColor}"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{StaticResource MidGrayColor}" />
            </Style.Resources>
        </Style>
        
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="50" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Label Grid.Row="0" Grid.Column="0"  >Available Diagrams</Label>
       
        <ListBox Margin="10" Height="150" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" Background="{StaticResource LightGrayBrush}"
                            ItemsSource="{Binding Path=DiagramsPossible, UpdateSourceTrigger=PropertyChanged}"                             
                            SelectionMode="Single"
                            HorizontalContentAlignment="Stretch"
                 ScrollViewer.VerticalScrollBarVisibility="Visible">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding diagramName}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                </Style>
            </ListBox.ItemContainerStyle>


        </ListBox>
        <StackPanel VerticalAlignment="Center" Margin="10,0,10,0" Grid.Row="1" Grid.Column="1">
            <Button x:Name="addDiagramSingle" Content="&gt;" Command="{Binding SelectAddDiagramSingle}" CommandParameter="{Binding SelectedItems, ElementName=listbox}" Margin="0,0,0,10" Padding="3" Width="Auto"/>
            <Button x:Name="addDiagramAll" Content="&gt;&gt;" Command="{Binding SelectAddDiagramAll}" Margin="0,0,0,10" Padding="3" Width="Auto"/>
            <Button x:Name="removeDiagramSingle" Content="&lt;" Command="{Binding SelectRemoveDiagramSingle}" Margin="0,0,0,10" Padding="3" Width="Auto"/>
            <Button x:Name="removeDiagramAll" Content="&lt;&lt;" Command="{Binding SelectRemoveDiagramAll}" Margin="0" Padding="3" Width="Auto"/>
        </StackPanel>
        <Label Grid.Row="0" Grid.Column="2">Diagrams to create</Label>
        <ListBox Margin="10" Height="150" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" Background="{StaticResource LightGrayBrush}"
                            ItemsSource="{Binding Path=DiagramsToCreate, UpdateSourceTrigger=PropertyChanged}" 
                            SelectionMode="Single"
                            HorizontalContentAlignment="Stretch"
                 ScrollViewer.VerticalScrollBarVisibility="Visible">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding diagramName}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        <StackPanel Height="25" Grid.Row="2" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
            <Button Width="110"  Command="{Binding CancleCreateDiagram}" IsCancel="True">Cancel</Button>
            <Button Width="110" Margin="10,0,0,0" Command="{Binding CreateDiagrams}" CommandParameter="{Binding ElementName=CreateDiagramWindow}">Create Diagrams</Button>
        </StackPanel>
    </Grid>
</Window>
